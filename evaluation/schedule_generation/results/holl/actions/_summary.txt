meta data:
{   'ann_output_processor': BatchProcessor([('sgmd', slice(0, 324, None), BatchProcessor([]))]),
    'dt': 900,
    'input_processor': BatchProcessor([('nmlz', slice(0, 1, None), BatchProcessor([]), tensor([0.]), tensor([3.6000e+08])), ('1', slice(1, 4, None), BatchProcessor([])), ('oneh', slice(4, 5, None), BatchProcessor([]), tensor([    0.,   900.,  1800.,  2700.,  3600.,  4500.,  5400.,  6300.,  7200.,
         8100.,  9000.,  9900., 10800., 11700., 12600., 13500., 14400., 15300.,
        16200., 17100., 18000., 18900., 19800., 20700., 21600., 22500., 23400.,
        24300., 25200., 26100., 27000., 27900., 28800., 29700., 30600., 31500.,
        32400., 33300., 34200., 35100., 36000., 36900., 37800., 38700., 39600.,
        40500., 41400., 42300., 43200., 44100., 45000., 45900., 46800., 47700.,
        48600., 49500., 50400., 51300., 52200., 53100., 54000., 54900., 55800.,
        56700., 57600., 58500., 59400., 60300., 61200., 62100., 63000., 63900.,
        64800., 65700., 66600., 67500., 68400., 69300., 70200., 71100., 72000.,
        72900., 73800., 74700., 75600., 76500., 77400., 78300., 79200., 80100.,
        81000., 81900., 82800., 83700., 84600., 85500., 86400.])), ('nmlz', slice(5, 6, None), BatchProcessor([]), tensor([0.]), tensor([84240000.])), ('1', slice(6, 8, None), BatchProcessor([])), ('oneh', slice(8, 9, None), BatchProcessor([]), tensor([0., 1.])), ('oneh', slice(9, 10, None), BatchProcessor([]), tensor([ 900., 1800., 2700., 3600., 4500., 5400., 6300., 7200.])), ('oneh', slice(10, 11, None), BatchProcessor([]), tensor([ 900., 1800., 2700., 3600., 4500., 5400., 6300., 7200.])), ('oneh', slice(11, 12, None), BatchProcessor([]), tensor([ 900., 1800., 2700., 3600., 4500., 5400., 6300., 7200.])), ('oneh', slice(12, 13, None), BatchProcessor([]), tensor([0., 1.])), ('nmlz', slice(13, 15, None), BatchProcessor([]), tensor([40., 20.]), tensor([20.,  1.])), ('nmlz', slice(15, 16, None), BatchProcessor([]), tensor([0.]), tensor([100000.]))]),
    'model': HoLL(EVSE(state=[3.600000e+08 5.464444e-01 7.029178e-01 8.078475e-01 1.800000e+03], charging_efficiency=360000000.0, correct_infeasible=1, constraint_fuzziness=True),BESS(state=[84160809.        0.        1.], capacity=84240000.0, charging_efficiency=0.78, discharging_efficiency=1, relative_loss=0.0, correct_infeasible=True),CHPP(state=[   0 2700 3600  900], state_matrix=[[(0.0, 0), (-2800.0, -6250.0)], [(-2800.0, -6250.0), (-5500.0, -12500)]], correct_infeasible=True),HWT_GCB(state=[ 1.       63.615346 20.      ], soft_mix_temp=40, soft_max_temp=60, volume=3.3, charging_efficiency=1, discharging_efficiency=1, relative_loss=0.005655, state_matrix=[[(0, 0), (0, -38500)], [(0, -4000), (0, -60000)]], max_temp=90),demand(state=[4894.], hidden_state=[124 570 array([], shape=(0, 1), dtype=float64)])),
    'output_action_feasibility': True,
    'output_interaction': False,
    'output_new_state': False,
    'output_processor': None,
    'sampling_parameters': {   'dwell_times': [   900,
                                                  1800,
                                                  2700,
                                                  3600,
                                                  4500,
                                                  5400,
                                                  6300,
                                                  7200],
                               'infeasible_chance': 0.5,
                               'min_off_times': [   900,
                                                    1800,
                                                    2700,
                                                    3600,
                                                    4500,
                                                    5400,
                                                    6300,
                                                    7200],
                               'min_on_times': [   900,
                                                   1800,
                                                   2700,
                                                   3600,
                                                   4500,
                                                   5400,
                                                   6300,
                                                   7200],
                               'soc_distribution': (   [   (0, 0.25),
                                                           (0.25, 0.75),
                                                           (0.75, 1)],
                                                       [0.375, 0.25, 0.375]),
                               'temp_distribution': (   [   (20, 60),
                                                            (60, 80),
                                                            (80, 90)],
                                                        [0.15, 0.7, 0.15])}}
---
parameters:
{   'batch_count': 1000.0,
    'batch_norms': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'batch_size': 3072,
    'betas': array([1. , 1. , 0.5, 2. , 2. , 2. , 0.5, 1. , 1. , 2. ]),
    'dropout': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'early_stopping_callback': EarlyStoppingCallback(stopping_scores={}, improvement_window=100),
    'epoch_count': 1000,
    'hidden_layer_count': 4,
    'input_width': 135,
    'learning_rate': 0.001,
    'loss': MixedLoss([(BCEWithLogitsLoss(), 324)],tensor([1000.], device='cuda:0'),cuda),
    'lr_scheduler': array([<class 'torch.optim.lr_scheduler.StepLR'>, {'step_size': 25, 'gamma': 0.75}], dtype=object),
    'max_grad_norm': 1000000.0,
    'output_activation': None,
    'output_width': 324,
    'regularization': L1RegularizationLoss(device=cuda, scale=2.000000E-08),
    'skips': array([[0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]),
    'width': 256,
    'width_interpolation_steps_input': 0,
    'width_interpolation_steps_output': 4}
---
neural network:
Sequential(
  (0_linear(135,270)): Linear(in_features=135, out_features=270, bias=True)
  (0_swish(0'50)): Swish(
    (sigmoid): Sigmoid()
  )
  (1_linear(270,284)): Linear(in_features=270, out_features=284, bias=True)
  (1_swish(1'00)): Swish(
    (sigmoid): Sigmoid()
  )
  (2_linear(284,297)): Linear(in_features=284, out_features=297, bias=True)
  (2_swish(1'00)): Swish(
    (sigmoid): Sigmoid()
  )
  (3_linear(297,311)): Linear(in_features=297, out_features=311, bias=True)
  (3_swish(2'00)): Swish(
    (sigmoid): Sigmoid()
  )
  (4_linear(311,324)): Linear(in_features=311, out_features=324, bias=True)
)
---
parameter count:
392099
---
