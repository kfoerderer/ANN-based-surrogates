meta data:
{   'ann_output_processor': BatchProcessor([('dnml', slice(0, 1, None), BatchProcessor([('clip', slice(0, 1, None), BatchProcessor([]), 0, 32400000)]), tensor([0.]), tensor([32400000.])), ('1', slice(1, 3, None), BatchProcessor([])), ('mode', slice(3, 204, None), BatchProcessor([]), tensor([ 4600.,  4554.,  4508.,  4462.,  4416.,  4370.,  4324.,  4278.,  4232.,
         4186.,  4140.,  4094.,  4048.,  4002.,  3956.,  3910.,  3864.,  3818.,
         3772.,  3726.,  3680.,  3634.,  3588.,  3542.,  3496.,  3450.,  3404.,
         3358.,  3312.,  3266.,  3220.,  3174.,  3128.,  3082.,  3036.,  2990.,
         2944.,  2898.,  2852.,  2806.,  2760.,  2714.,  2668.,  2622.,  2576.,
         2530.,  2484.,  2438.,  2392.,  2346.,  2300.,  2254.,  2208.,  2162.,
         2116.,  2070.,  2024.,  1978.,  1932.,  1886.,  1840.,  1794.,  1748.,
         1702.,  1656.,  1610.,  1564.,  1518.,  1472.,  1426.,  1380.,  1334.,
         1288.,  1242.,  1196.,  1150.,  1104.,  1058.,  1012.,   966.,   920.,
          874.,   828.,   782.,   736.,   690.,   644.,   598.,   552.,   506.,
          460.,   414.,   368.,   322.,   276.,   230.,   184.,   138.,    92.,
           46.,    -0.,   -46.,   -92.,  -138.,  -184.,  -230.,  -276.,  -322.,
         -368.,  -414.,  -460.,  -506.,  -552.,  -598.,  -644.,  -690.,  -736.,
         -782.,  -828.,  -874.,  -920.,  -966., -1012., -1058., -1104., -1150.,
        -1196., -1242., -1288., -1334., -1380., -1426., -1472., -1518., -1564.,
        -1610., -1656., -1702., -1748., -1794., -1840., -1886., -1932., -1978.,
        -2024., -2070., -2116., -2162., -2208., -2254., -2300., -2346., -2392.,
        -2438., -2484., -2530., -2576., -2622., -2668., -2714., -2760., -2806.,
        -2852., -2898., -2944., -2990., -3036., -3082., -3128., -3174., -3220.,
        -3266., -3312., -3358., -3404., -3450., -3496., -3542., -3588., -3634.,
        -3680., -3726., -3772., -3818., -3864., -3910., -3956., -4002., -4048.,
        -4094., -4140., -4186., -4232., -4278., -4324., -4370., -4416., -4462.,
        -4508., -4554., -4600.])), ('mode', slice(204, 205, None), BatchProcessor([]), tensor([0.]))]),
    'dt': 900,
    'input_processor': BatchProcessor([('nmlz', slice(0, 1, None), BatchProcessor([]), tensor([0.]), tensor([32400000.])), ('1', slice(1, 3, None), BatchProcessor([])), ('oneh', slice(3, 4, None), BatchProcessor([]), tensor([-4600., -4554., -4508., -4462., -4416., -4370., -4324., -4278., -4232.,
        -4186., -4140., -4094., -4048., -4002., -3956., -3910., -3864., -3818.,
        -3772., -3726., -3680., -3634., -3588., -3542., -3496., -3450., -3404.,
        -3358., -3312., -3266., -3220., -3174., -3128., -3082., -3036., -2990.,
        -2944., -2898., -2852., -2806., -2760., -2714., -2668., -2622., -2576.,
        -2530., -2484., -2438., -2392., -2346., -2300., -2254., -2208., -2162.,
        -2116., -2070., -2024., -1978., -1932., -1886., -1840., -1794., -1748.,
        -1702., -1656., -1610., -1564., -1518., -1472., -1426., -1380., -1334.,
        -1288., -1242., -1196., -1150., -1104., -1058., -1012.,  -966.,  -920.,
         -874.,  -828.,  -782.,  -736.,  -690.,  -644.,  -598.,  -552.,  -506.,
         -460.,  -414.,  -368.,  -322.,  -276.,  -230.,  -184.,  -138.,   -92.,
          -46.,     0.,    46.,    92.,   138.,   184.,   230.,   276.,   322.,
          368.,   414.,   460.,   506.,   552.,   598.,   644.,   690.,   736.,
          782.,   828.,   874.,   920.,   966.,  1012.,  1058.,  1104.,  1150.,
         1196.,  1242.,  1288.,  1334.,  1380.,  1426.,  1472.,  1518.,  1564.,
         1610.,  1656.,  1702.,  1748.,  1794.,  1840.,  1886.,  1932.,  1978.,
         2024.,  2070.,  2116.,  2162.,  2208.,  2254.,  2300.,  2346.,  2392.,
         2438.,  2484.,  2530.,  2576.,  2622.,  2668.,  2714.,  2760.,  2806.,
         2852.,  2898.,  2944.,  2990.,  3036.,  3082.,  3128.,  3174.,  3220.,
         3266.,  3312.,  3358.,  3404.,  3450.,  3496.,  3542.,  3588.,  3634.,
         3680.,  3726.,  3772.,  3818.,  3864.,  3910.,  3956.,  4002.,  4048.,
         4094.,  4140.,  4186.,  4232.,  4278.,  4324.,  4370.,  4416.,  4462.,
         4508.,  4554.,  4600.]))]),
    'model': BESS(state=[32375314.932875        0.              1.      ], capacity=32400000, charging_efficiency=0.83, discharging_efficiency=1, relative_loss=0.0075, correct_infeasible=True),
    'output_action_feasibility': False,
    'output_interaction': True,
    'output_new_state': True,
    'output_processor': BatchProcessor([('nmlz', slice(0, 1, None), BatchProcessor([]), tensor([0.]), tensor([32400000.])), ('1', slice(1, 3, None), BatchProcessor([])), ('didx', slice(3, 4, None), BatchProcessor([]), tensor([ 4600.,  4554.,  4508.,  4462.,  4416.,  4370.,  4324.,  4278.,  4232.,
         4186.,  4140.,  4094.,  4048.,  4002.,  3956.,  3910.,  3864.,  3818.,
         3772.,  3726.,  3680.,  3634.,  3588.,  3542.,  3496.,  3450.,  3404.,
         3358.,  3312.,  3266.,  3220.,  3174.,  3128.,  3082.,  3036.,  2990.,
         2944.,  2898.,  2852.,  2806.,  2760.,  2714.,  2668.,  2622.,  2576.,
         2530.,  2484.,  2438.,  2392.,  2346.,  2300.,  2254.,  2208.,  2162.,
         2116.,  2070.,  2024.,  1978.,  1932.,  1886.,  1840.,  1794.,  1748.,
         1702.,  1656.,  1610.,  1564.,  1518.,  1472.,  1426.,  1380.,  1334.,
         1288.,  1242.,  1196.,  1150.,  1104.,  1058.,  1012.,   966.,   920.,
          874.,   828.,   782.,   736.,   690.,   644.,   598.,   552.,   506.,
          460.,   414.,   368.,   322.,   276.,   230.,   184.,   138.,    92.,
           46.,    -0.,   -46.,   -92.,  -138.,  -184.,  -230.,  -276.,  -322.,
         -368.,  -414.,  -460.,  -506.,  -552.,  -598.,  -644.,  -690.,  -736.,
         -782.,  -828.,  -874.,  -920.,  -966., -1012., -1058., -1104., -1150.,
        -1196., -1242., -1288., -1334., -1380., -1426., -1472., -1518., -1564.,
        -1610., -1656., -1702., -1748., -1794., -1840., -1886., -1932., -1978.,
        -2024., -2070., -2116., -2162., -2208., -2254., -2300., -2346., -2392.,
        -2438., -2484., -2530., -2576., -2622., -2668., -2714., -2760., -2806.,
        -2852., -2898., -2944., -2990., -3036., -3082., -3128., -3174., -3220.,
        -3266., -3312., -3358., -3404., -3450., -3496., -3542., -3588., -3634.,
        -3680., -3726., -3772., -3818., -3864., -3910., -3956., -4002., -4048.,
        -4094., -4140., -4186., -4232., -4278., -4324., -4370., -4416., -4462.,
        -4508., -4554., -4600.])), ('didx', slice(4, 5, None), BatchProcessor([]), tensor([0.]))]),
    'sampling_parameters': {   'infeasible_chance': 0.6666666666666666,
                               'soc_distribution': (   [   (0, 0.25),
                                                           (0.25, 0.75),
                                                           (0.75, 1)],
                                                       [0.375, 0.25, 0.375])}}
---
parameters:
{   'batch_count': 1000.0,
    'batch_norms': array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0]),
    'batch_size': 3072,
    'betas': array([2. , 2. , 2. , 2. , 1. , 0.5, 2. , 0.5, 0.5, 2. ]),
    'dropout': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'early_stopping_callback': EarlyStoppingCallback(stopping_scores={}, improvement_window=100),
    'epoch_count': 1000,
    'hidden_layer_count': 5,
    'input_width': 204,
    'learning_rate': 0.001,
    'loss': MixedLoss([(MSELoss(), 1), (MSELoss(), 2), (CrossEntropyLoss(), 201), (CrossEntropyLoss(), 1)],tensor([1.0000e+06, 1.0000e+00, 1.0000e+00, 1.0000e+00], device='cuda:0'),cuda),
    'lr_scheduler': array([<class 'torch.optim.lr_scheduler.StepLR'>, {'step_size': 1, 'gamma': 0.99}], dtype=object),
    'max_grad_norm': 1000000.0,
    'output_activation': None,
    'output_width': 205,
    'regularization': L1RegularizationLoss(device=cuda, scale=2.000000E-09),
    'skips': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 0, 0, 0, 0, 1, 0]]),
    'width': 1024,
    'width_interpolation_steps_input': 0,
    'width_interpolation_steps_output': 4}
---
neural network:
Sequential(
  (0_linear(204,1024)): Linear(in_features=204, out_features=1024, bias=True)
  (0_swish(0'50)): Swish(
    (sigmoid): Sigmoid()
  )
  (1_linear(1024,861)): Linear(in_features=1024, out_features=861, bias=True)
  (1_swish(2'00)): Swish(
    (sigmoid): Sigmoid()
  )
  (2_linear(861,697)): Linear(in_features=861, out_features=697, bias=True)
  (2_swish(0'50)): Swish(
    (sigmoid): Sigmoid()
  )
  (3_linear(697,533)): Linear(in_features=697, out_features=533, bias=True)
  (3_swish(0'50)): Swish(
    (sigmoid): Sigmoid()
  )
  (4_linear(533,369)): Linear(in_features=533, out_features=369, bias=True)
  (4_swish(2'00)): Swish(
    (sigmoid): Sigmoid()
  )
  (5_batch_norm(369)): BatchNorm1d(369, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (5_linear(369,205)): Linear(in_features=369, out_features=205, bias=True)
)
---
parameter count:
2338932
---
